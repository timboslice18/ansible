---
- example: BGP neighbor is x.x.x.x,  remote AS y.y.y.y, external link
  getval: 'BGP neighbor is (?P<neigh_ip>\S+),  remote AS (?P<remote_as>\S+), external link'
  result:
    "{{ neigh_ip }}":
      remote_as: "{{ remote_as }}"
  shared: true

- example: " Description: xxx"
  getval: ' Description\: (?P<neigh_desc>.*)'
  result:
    "{{ neigh_ip }}":
      neigh_descr: "{{ neigh_desc }}"

- example: "  BGP version x, remote router ID x.x.x.x"
  getval: '  BGP version (?P<bgp_ver>\S+), remote router ID (?P<remote_router_id>\S+)'
  result:
    "{{ neigh_ip }}":
      bgp_ver: "{{ bgp_ver }}"
      remote_router_id: "{{ remote_router_id }}"

- example: "  BGP state = Established, up for 1w6d"
  getval: '  BGP state = (?P<bgp_state>\S+), up for (?P<last_state_change>\S+)'
  #change up for to account for other bgp states
  result:
    "{{ neigh_ip }}":
      bgp_state: "{{ bgp_state }}"
      last_state_change: "{{ last_state_change }}"

- example: "  Configured hold time is 60, keepalive interval is 20 seconds"
  getval: '  Configured hold time is (?P<hold_time>\S+), keepalive interval is (?P<keepalive>\S+)'
  result:
    "{{ neigh_ip }}":
      hold_time: "{{ hold_time }}"
      keepalive: "{{ keepalive }}"

- example: "  Inbound soft reconfiguration allowed"
  getval: '  Inbound soft reconfiguration (?P<inbound_soft_reconfig>\S+)'
  result:
    "{{ neigh_ip }}":
      inbound_soft_reconfig: "{{ inbound_soft_reconfig }}"

- example: "  Route map for incoming advertisements is xxx"
  getval: '  Route map for incoming advertisements is (?P<route_map_in>\S+)'
  result:
    "{{ neigh_ip }}":
      route_map_in: "{{ route_map_in }}"

- example: "  Route map for outgoing advertisements is xxx"
  getval: '  Route map for outgoing advertisements is (?P<route_map_out>\S+)'
  result:
    "{{ neigh_ip }}":
      route_map_out: "{{ route_map_out }}"

- example: "  Inherits from template xxx"
  getval: '  Inherits from template (?P<peer_policy_template>\S+)'
  result:
    "{{ neigh_ip }}":
      peer_policy_template: "{{ peer_policy_template }}"
