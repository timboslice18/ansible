Backing up and tracking device configs with Ansible & GIT
https://github.com/iserghini/www.iserghini.com/tree/master/Backup_configs
 
 
 
Summary
1. Create ansible playbook to take a backup of our devices’ configs
2. Parse the ansible output to human-readable text file
3. Push the config files to GitHub
4. Automate the process of taking backups and pushing them to Github
 
 
1. Ansible playbook to take backup of configs
 
 
 
2. Parse the ansible output to a human readable text file
 
Script below opens each config file inside the folder sw_configs, iterates over the lists and created a new config file with CLI-like formatting
 
Ansible output example:
["! Command: show running-config", "! device: sw1 (vEOS, EOS-4.18.5M)", "!", "! boot system flash:/vEOS-lab.swi", "!", "transceiver qsfp default-mode 4x10G", "!", "hostname sw1", "!",.....
 
Python Script

Import json
Import os

For filename in os.listdir("./sw_configs/"):
	With open("./sw_configs/" + filename) as f:
		File = f.read()
	
File_json = json.loads(file)

With open("./sw_configs/" + filename, "w") as f:
	For line in file_json:
		f.write(line)
		f.write("\n")
		
 
   
 
3. Push config files to Github
 
Git add sw_configs/*
Git commit -m “backup config”
Git push
 
4. Automate the process
 
Run the following back script:
 
#!/bin/bash
 
Ansible-playbook backup_sw_config.yml -I hosts
./format_running_config.py
 
Git add sw_configs/*
Git commit -m “backup config”
Git push
 
Set CRON job
 
crontab -l | grep “0 23” </span>
 
0 23 * * * ./git_sw_backup.sh
 


